"""Anki-related tools for vocabulary processing."""

import yaml
import csv
import re
import os
from smolagents import tool

@tool
def yaml_to_anki(yaml_content: str) -> str:
    """
    Convert YAML vocabulary entries into an Anki-ready CSV file.
    
    Args:
        yaml_content: The pure YAML generated by the model
        
    Returns:
        Path to the generated anki CSV file
    """
    OUTPUT_FILE = "anki_cards.csv"
    
    def is_proper_name(word: str) -> bool:
        return bool(re.match(r'^[A-Z]', str(word).strip()))
    
    if not isinstance(yaml_content, str):
        raise RuntimeError("yaml_content must be a string.")

    yaml_content = yaml_content.strip()
    if yaml_content.startswith("```") and yaml_content.endswith("```"):
        yaml_content = yaml_content[3:-3].strip()

    try:
        data = yaml.safe_load(yaml_content)
    except yaml.YAMLError as e:
        raise RuntimeError(f"❌ YAML error: {e}")

    if isinstance(data, dict):
        data = [data]
    if not isinstance(data, list):
        raise RuntimeError("❌ Parsed YAML is not a list or dict of entries.")

    seen = set()
    cleaned_data = []
    for entry in data:
        if not isinstance(entry, dict):
            continue
        word = str(entry.get("word", "")).strip()
        back = str(entry.get("back", "")).strip()
        tags = str(entry.get("tags", "")).strip()

        if not word:
            continue

        if not is_proper_name(word):
            word = word.lower()

        if word.lower() in seen:
            continue
        seen.add(word.lower())

        cleaned_data.append([word, back, tags])

    with open(OUTPUT_FILE, "w", encoding="utf-8", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["Word", "Back", "Tags"])
        writer.writerows(cleaned_data)

    return os.path.abspath(OUTPUT_FILE)
